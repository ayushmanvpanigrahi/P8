Practical 8

Aim:-Implement a typical service and a typical client using WCF.
Step 1:-
Open Microsoft visual studio → select create a new project

Step 2:-
Select WCF Service Application→click on Next.

Step 3:-
Give name as MathService1 → click on Create.

Step 4:-
Delete IService1.cs and Service.svc from the right side(from solution explorer).

Step 5:-
Right click on MathService1(from solution explorer)-->add→new item→select WCF service → give name as MathService → click on Add.

Step 6:-
Write code for MathService.svc.cs and MathService.cs

-------------------------------------------------------------------------------------------------------------------------

MathService.svx.cs:


using System;
using System.Collections.Generic;
using System.Linq;
using System.Runtime.Serialization;
using System.ServiceModel;
using System.Text;

namespace MathService1
{
    // NOTE: You can use the "Rename" command on the "Refactor" menu to change the class name "MathService" in code, svc and config file together.
    // NOTE: In order to launch WCF Test Client for testing this service, please select MathService.svc or MathService.svc.cs at the Solution Explorer and start debugging.
    public class MathService : IMathService
    {
        public Int32 add(Int32 n1, Int32 n2)
        {
            return add(n1, n2);
        }

        public Int32 subtract(Int32 n1, Int32 n2)
        {
            return subtract(n1, n2);
        }

        public Int32 multiply(Int32 n1, Int32 n2)
        {
            return multiply(n1, n2);
        }

        public Int32 divide(Int32 n1, Int32 n2)
        {
            return divide(n1, n2);
        }
    }
}
--------------------------------------------------------------------------------------------------------------------------------------------------

IMathService.cs


using System;
using System.Collections.Generic;
using System.Linq;
using System.Runtime.Serialization;
using System.ServiceModel;
using System.Text;

namespace MathService1
{
    // NOTE: You can use the "Rename" command on the "Refactor" menu to change the interface name "IMathService" in both code and config file together.
    [ServiceContract]
    public interface IMathService
    {
        [OperationContract]
        Int32 add(Int32 n1 , Int32 n2);

        [OperationContract]
        Int32 subtract(Int32 n1, Int32 n2);

        [OperationContract]
        Int32 multiply(Int32 n1, Int32 n2);

        [OperationContract]
        Int32 divide(Int32 n1, Int32 n2);
    }
}


-----------------------------------------------------------------------------------------------------------------------------------------------------------

Step 7:-
Test the service (click run).

Step 8:-
Right click on Solution ‘MathService1’.

Step 9:-
click add →new project.

Step 10:-
Select windows form application

Step 11:-
Give name as MathServiceTestApp1.

Step 12:-
create design on form1.

Step 13:-
Right click on reference as shown below →click add service reference.

Step 14:-
click on discover button →select IMathService.

Step 15:-
Give namespace as given in picture.

Step 16:-
Double click on the calculate button and write code.

--------------------------------------------------------------------------------------------------------------------

form1.cs:



using MathServiceTestApp1.MathService1;
using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Windows.Forms;

namespace MathServiceTestApp1
{
    public partial class Form1 : Form
    {
        public Form1()
        {
            InitializeComponent();
        }

        private void Form1_Load(object sender, EventArgs e)
        {
            MathServiceClient loclient = new MathServiceClient();
            Int32 num1 = Convert.ToInt32(textBox1.Text.Trim());
            Int32 num2 = Convert.ToInt32(textBox2.Text.Trim());
            if (comboBox1.Text == "add")
            {
                textBox3.Text = loclient.add(num1, num2).ToString();
            }
            else if (comboBox1.Text == "subtract")
            {
                textBox3.Text = loclient.subtract(num1, num2).ToString();
            }
            else if (comboBox1.Text == "multiply")
            {
                textBox3.Text = loclient.multiply(num1, num2).ToString();
            }
            else
            {
                textBox3.Text = loclient.divide(num1, num2).ToString();
            }

        }
    }
}

----------------------------------------------------------------------------------------------------------------------------------------------------------

Step 17:-
Right click on MathServiceTestApp1---click set as startup project.

Step 18:-
Now run the project.
